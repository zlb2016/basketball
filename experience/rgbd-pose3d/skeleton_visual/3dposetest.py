# -*- coding:utf-8 -*-
from matplotlib import pyplot as plt
from  mpl_toolkits.mplot3d import Axes3D
import numpy as np
import json

data1=np.array([[0.18707901082384734, -0.6570788133891067, 4.176250190734863], [0.19262250715000434, -0.5699922617734495, 4.300000190734863], [0.04800995019590369, -0.5699922617734495, 4.300000190734863], [0.3163725071500043, -0.30749226177344957, 4.093750190734863], [0.3576225071500043, -0.26624226177344956, 4.341250190734863], [0.343705271442359, -0.4723267422566014, 4.382500190734863], [0.4095413425811548, -0.2503212334862811, 4.300000190734863], [0.33076485676584994, -0.036493355309409024, 4.217500190734863], [0.12377881765849856, 0.07134561729529089, 4.423750190734863], [0.12493301398701344, 0.5145941903632142, 4.465000190734863], [0.12493301398701344, 0.8465316645405558, 4.465000190734863], [0.27001172140490043, 0.07068034313048958, 4.382500190734863], [0.2750946571827467, 0.5145941903632142, 4.465000190734863], [0.2750946571827467, 0.8465316645405558, 4.465000190734863], [0.18707901082384734, -0.7605692113456195, 4.176250190734863], [0.2598458498492079, -0.663568965993573, 4.217500190734863], [0.19077467504128534, -0.6700591185980392, 4.2587501907348635], [0.2649287856270542, -0.6765492712025055, 4.300000190734863]])

data1 = np.array([
       [ 0.58676358, -0.59165058,  2.55375003],#0鼻子
       [ 0.7271494 , -0.47259552,  2.59500003],#1颈部
       [ 0.62467488, -0.49513259,  2.71875003],#2右肩
       [ 0.5621494 , -0.21009552,  2.84250003],#3右肘
       [ 0.57017379, -0.15586862,  2.67750003],#4右手腕
       [ 0.78852938, -0.45757081,  2.51250003],#5左肩
       [ 0.88736011, -0.14866461,  2.55375003],#6左肘
       [ 0.78852938,  0.04052125,  2.51250003],#7左手腕
       [ 0.62467488,  0.11122014,  2.71875003],#8右髋
       [ 0.63415271,  0.523276  ,  2.76000003],#9右膝
       [ 0.6446494 ,  0.98615448,  2.84250003],#10右踝
       [ 0.8096494 ,  0.07865448,  2.63625003],#11左髋
       [ 0.8096494 ,  0.53240448,  2.63625003],#12左膝
       [ 0.8403134 ,  0.97208684,  2.67750003],#13左踝
       [ 0.6033994 , -0.66384552,  2.55375003],#14右眼
       [ 0.61953448, -0.64435532,  2.51250003],#15左眼
       [ 0.6446494 , -0.66384552,  2.63625003],#16右耳
       [ 0.6924732 , -0.63377636,  2.47125003]])#17左耳
data2=np.array(
  [[-4.64478783e-03,-5.30230684e-02,2.06749996e-01],
 [-9.74172116e-03, -2.67283571e-02,  2.47999996e-01],
 [-3.08175004e-02, -3.83419191e-02,  2.89249996e-01],
 [-2.89808936e-02,  3.33443469e-03,  2.06749996e-01],
 [-3.59340667e-02,  3.91983003e-02,  2.06749996e-01],
 [ 9.26703603e-04, -8.94537729e-03,  8.29999959e-02],
 [ 9.26155833e-03,  1.35812534e-02,  2.06749996e-01],
 [ 1.94498351e-02,  5.31646144e-02,  2.47999996e-01],
 [-1.85511340e-02,  4.43217096e-02,  2.06749996e-01],
 [-1.48498799e-02,  7.23896548e-02,  1.65499996e-01],
 [ 3.15082788e-02, -1.17283571e-02,  7.42999996e-01],
 [ 4.66143055e-04,  7.91549654e-03,  4.17499959e-02],
 [ 6.93916812e-03,  1.14620746e-01,  2.47999996e-01],
 [-9.22417212e-02,  2.35771643e-01,  2.89249996e-01],
 [-8.12137437e-03, -5.81464778e-02,  2.06749996e-01],
 [-1.16820129e-03, -5.81464778e-02,  2.06749996e-01],
 [-2.10897842e-02, -7.41810042e-02,  2.89249996e-01],
 [-1.40127652e-03, -6.36020363e-02,  2.47999996e-01]]
)
# defin2=np.array(
#   [[0.33265746 0.15206987 0.17980652 0.22903763 0.3074836  0.11005154
#   0.21338898 0.2572821  0.09150827 0.03108658 0.08482015 0.06463751
#   0.02882545 0.01484217 0.2930283  0.3466869  0.3001729  0.21800043]]
# )
data3=np.array(
  [[ 1.14842523e-03,  2.19053979e-02, -2.03250000e-01],
        [-7.16176622e-04, -1.09674750e-03,  1.26750000e-01],
        [-7.11023736e-03, -1.09674750e-03,  1.26750000e-01],
        [-2.72873011e-02,  3.38583806e-02,  3.74250000e-01],
        [-4.86634174e-02,  9.79150727e-02,  4.56750000e-01],
        [ 4.70072687e-03, -1.45367716e-03,  1.68000000e-01],
        [ 1.03507056e-02,  1.93621098e-02,  1.68000000e-01],
        [ 2.28810060e-02,  6.25434537e-02,  2.91750000e-01],
        [-4.97888378e-03,  2.71718346e-02,  1.26750000e-01],
        [-3.77424121e-03,  6.93199985e-02,  1.68000000e-01],
        [-1.69509261e-05, -1.50025959e-01,  3.33000000e-01],
        [-6.84123642e-03, -5.24143082e-02, -2.44500000e-01],
        [ 9.31751218e-03,  1.37402140e-01,  3.33000000e-01],
        [ 1.23733049e-01,  5.62240415e-02, -2.44500000e-01],
        [ 1.14842523e-03,  2.19053979e-02, -2.03250000e-01],
        [-2.26930743e-03,  2.19053979e-02, -2.03250000e-01],
        [-6.59923057e-03, -1.81063067e-02,  1.68000000e-01],
        [-4.53284376e-03,  1.74596529e-02, -1.62000000e-01]]
)
# defin3=np.array([[0.22542904, 0.14065705, 0.12215839, 0.17244625, 0.02530943,
#         0.15534002, 0.2834705 , 0.31949496, 0.10990919, 0.06161169,
#         0.10901813, 0.02460527, 0.03514915, 0.00815154, 0.19569829,
#         0.23389822, 0.23540965, 0.22928002]])
# data=np.array([#修改数据
#        [ 0.01038131, -0.00767018,  0.04875   ],#0鼻子
#        [ 0.02803191, -0.01431663,  0.1725    ],#1颈部
#        [ 0.01691458, -0.01414555,  0.13125   ],#2左肩
#        [ 0.07921807,  0.02224403,  0.54375   ],#3左肘
#        [ 0.08519154,  0.03079981,  0.49125   ],#4左手腕
#        [ 0.13448942, -0.0622462 ,  0.75      ],#5右肩
#        [ 0.12709251,  0.01143062,  0.70875   ],#6右肘
#        [ 0.09339251,  0.02487981,  0.37875   ],#7右手腕
#        [ 0.02035801,  0.0299317 ,  0.21375   ],#8左髋
#        [ 0.01250053,  0.04114638,  0.13125   ],#9左膝
#        [ 0.01571089,  0.12417509,  0.255     ],#10左踝
#        [-0.04097487, -0.03938382, -0.28125   ],#11右髋
#        [ 0.07531408,  0.12126053,  0.42      ],#12右膝
#     #    [ 0.07531408,  0.12126053,  0.42      ],#13右踝
#        [ 0.06133383,  0.11008993,  0.303875   ],#13右踝
#        [ 0.01038131, -0.00887824,  0.04875   ],#14左眼
#        [ 0.01038131, -0.00767018,  0.04875   ],#15右眼
#        [ 0.02832949, -0.01892766,  0.05375   ],#16左耳
#     #    [ 0.03832949, -0.03892766,  0.21375   ],#17右耳
#        [ 0.02832949, -0.02892766,  0.21375      ]
#        ])

# data=np.array([[ 0.3525464,-0.1716039,3.231897],#0臀部中点#kinect数据
#         [ 0.3616037,0.102996,3.164535],#1臀部上部中点
#         [ 0.3683444,0.3741698,3.088903],#2脖子
#         [ 0.3475621,0.5187062,3.051989],#3头(作为鼻子)
#         [ 0.2096776,0.3053874,3.16089],#4左肩1
#         [ 0.1648699,0.1060671,3.155235],#5左肘1
#         [ 0.2736065,0.09086692,2.901276],#6左腕1
#         [ 0.2961145,0.03280195,2.841183],#7左手
#         [ 0.487476,0.2670175,3.015251],#8右肩1
#         [ 0.5200339,0.06213368,2.98291],#9右肘1
#         [ 0.3062175,0.02678134,2.88056],#10右腕1
#         [ 0.2372144,0.03553688,2.833289],#11右手
#         [ 0.2813471,-0.1679728,3.221935],#12左臀1
#         [ 0.3034572,-0.4572012,3.329852],#13左膝1
#         [ 0.3647171,-0.7599866,3.410001],#14左踝1
#         [ 0.3303504,-0.8361098,3.411484],#15左脚
#         [ 0.4160445,-0.1715734,3.173684],#16右臀1
#         [ 0.4507392,-0.4806581,3.162828],#17右膝1
#         [ 0.478819,-0.7916512,3.275743],#18右踝1
#         [ 0.4258861,-0.8481283,3.164284],#19右脚
#         [ 0.3669905,0.3070622,3.109868],#20肩部中点(脖子)
#         [ 0.2723106,0.03126522,2.804767],#21左手指尖
#         [ 0.2636626,0.0477571,2.7945],#22左拇指
#         [ 0.1978352,0.03234557,2.834733],#23右手指尖
#         [ 0.1932472,0.00465894,2.851]])#24右拇指
data1=np.array([#kinect骨骼点左右与coco关键点左右对应
        [ 0.3475621,0.5187062,3.051989],#3头(作为鼻子)
        [ 0.3669905,0.3070622,3.109868],#20肩部中点(脖子)
        [ 0.2096776,0.3053874,3.16089],#4左肩1
        [ 0.1648699,0.1060671,3.155235],#5左肘1
        [ 0.2736065,0.09086692,2.901276],#6左腕1
        [ 0.487476,0.2670175,3.015251],#8右肩1
        [ 0.5200339,0.06213368,2.98291],#9右肘1
        [ 0.3062175,0.02678134,2.88056],#10右腕1
        [ 0.2813471,-0.1679728,3.221935],#12左臀1
        [ 0.3034572,-0.4572012,3.329852],#13左膝1
        [ 0.3647171,-0.7599866,3.410001],#14左踝1
        [ 0.4160445,-0.1715734,3.173684],#16右臀1
        [ 0.4507392,-0.4806581,3.162828],#17右膝1
        [ 0.478819,-0.7916512,3.275743]#18右踝1
])
data=np.array(
  [[0.000245663733811019, -0.5828365918063347, -0.22687500000000016], [0.018735164651953184, -0.3900084147864441, -0.061875000000000124], [-0.13527720032558604, -0.3900084147864441, -0.061875000000000124], [-0.1866146553180988, -0.2386974694323078, -0.061875000000000124], [0.04184704079963092, -0.3365816668898964, 0.1443749999999997], [0.14544866179675398, -0.33213592193379227, 0.10312499999999991], [0.22637379019067538, -0.0984195919466585, 0.26812499999999995], [0.09136184068725961, -0.29212421732885535, -0.26812499999999995], [-0.08393974533307297, 0.215235366630101, -0.061875000000000124], [-0.13781866821450917, 0.5110587602284855, -0.10312499999999991], [-0.09688016000958202, 0.7769298984201973, -0.22687500000000016], [0.018735164651953184, 0.215235366630101, -0.061875000000000124], [0.03260229034055989, 0.6169748328176485, 0.061875000000000124], [0.037224665570095405, 0.9437726856468873, 0.10312499999999991]]
)
def as_num(x):#处理e-04
    print('x',x)
    s=[]
    for i in range(18):
        a=x[0][0]
        s.append([x[i][0],x[i][1],x[i][2]])
    print('s',s)
    return s
# scatter 画骨架点
# 头部、脖子、身体和手臂分开用plot画
def draw(skeleton,k):
    #定义坐标轴
    fig = plt.figure()
    ax1 = plt.axes(projection='3d')

    x = skeleton[:, 0]
    y = skeleton[:, 1]
    z = skeleton[:, 2]

    neck_x = [skeleton[0, 0], skeleton[1, 0]]
    neck_y = [skeleton[0, 1], skeleton[1, 1]]
    neck_z = [skeleton[0, 2], skeleton[1, 2]]

    leftbody_x = [skeleton[1, 0], skeleton[8, 0], skeleton[9, 0], skeleton[10, 0]]
    leftbody_y = [skeleton[1, 1], skeleton[8, 1], skeleton[9, 1], skeleton[10, 1]]
    leftbody_z = [skeleton[1, 2], skeleton[8, 2], skeleton[9, 2], skeleton[10, 2]]

    rightbody_x = [skeleton[1, 0], skeleton[11, 0], skeleton[12, 0], skeleton[13, 0]]
    rightbody_y = [skeleton[1, 1], skeleton[11, 1], skeleton[12, 1], skeleton[13, 1]]
    rightbody_z = [skeleton[1, 2], skeleton[11, 2], skeleton[12, 2], skeleton[13, 2]]

    leftarm_x = [skeleton[1, 0], skeleton[2, 0], skeleton[3, 0], skeleton[4, 0]]
    leftarm_y = [skeleton[1, 1], skeleton[2, 1], skeleton[3, 1], skeleton[4, 1]]
    leftarm_z = [skeleton[1, 2], skeleton[2, 2], skeleton[3, 2], skeleton[4, 2]]

    rightarm_x = [skeleton[1, 0], skeleton[5, 0], skeleton[6, 0], skeleton[7, 0]]
    rightarm_y = [skeleton[1, 1], skeleton[5, 1], skeleton[6, 1], skeleton[7, 1]]
    rightarm_z = [skeleton[1, 2], skeleton[5, 2], skeleton[6, 2], skeleton[7, 2]]

    ax1.scatter3D(x,y,z, cmap='Blues')  #绘制散点图

    ax1.plot3D( neck_x, neck_y, neck_z, 'red')    #绘制颈部曲线

    ax1.plot3D( leftbody_x, leftbody_y, leftbody_z, 'blue') # 绘制右侧身体
    ax1.plot3D( rightbody_x, rightbody_y, rightbody_z, 'green') # 绘制左侧身体

    ax1.plot3D( leftarm_x, leftarm_y, leftarm_z, 'blue') # 绘制右侧身体
    ax1.plot3D( rightarm_x, rightarm_y, rightarm_z, 'green') # 绘制左侧身体
    ax1.view_init(-80, -90)#转换3D视角
    # plt.savefig('./output/3D_skeleton/truth_008/truth-'+str(k)+'.png')
    # ax1.view_init(-80,-90)
    plt.savefig('../output/3D_test_skeleton/test_008/test-'+str(k)+'.png')
    
    # plt.show()
    pass
        
def main(data,k):
    draw(data,k)
    print('ok')
    pass

def standard():
    with open('./truth_008.json',encoding='utf-8') as f:
      line = f.readlines()
      print('len',type(line))
      for index,dic in enumerate(line):
        d = json.loads(dic)
        print(index)
        person=d['skeleton']
        print(len(person))#判断检测出的关键点是否是25个，不是的话舍弃
        newskeleton=[]
        if len(person)==25:
          #选择14个关键点做图
          newskeleton.append(person[3])
          newskeleton.append(person[20])
          newskeleton.append(person[8])
          newskeleton.append(person[9])
          newskeleton.append(person[10])
          newskeleton.append(person[4])
          newskeleton.append(person[5])
          newskeleton.append(person[6])
          newskeleton.append(person[16])
          newskeleton.append(person[17])
          newskeleton.append(person[18])
          newskeleton.append(person[12])
          newskeleton.append(person[13])
          newskeleton.append(person[14])
          main(np.array(newskeleton),index+1)
        print('frame_'+str(index)+' is done')
      f.close()
def ours():
     with open('../output/3D_test_skeleton/ntu_test_P008_3d.json',encoding='utf-8') as f:
      line = f.readlines()
      print('len',type(line))
      for index,dic in enumerate(line):
        d = json.loads(dic)
        print(index)
        person=d['3D_skeleton']
        print(len(person))#判断检测出的关键点是否是18个，不是的话舍弃
        if len(person)==18:#从中选择14个坐标画图
          del person[14:18]
          print(len(person))
          main(np.array(person),index+1)
        print('frame_'+str(index)+' is done')
      f.close()
if __name__ == "__main__":
    # p=as_num(data3)
    # print(p)
    # main(np.array(p),1)
    # standard()#读取标准骨架数据
    ours()#本文方法
    pass